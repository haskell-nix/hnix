Name:                hnix
Version:             0.5.0
Synopsis:            Haskell implementation of the Nix language
Description:
  Haskell implementation of the Nix language.

License:             BSD3
License-file:        LICENSE
Author:              John Wiegley
Maintainer:          johnw@newartisans.com
Category:            Data, Nix
Build-type:          Simple
Cabal-version:       >=1.10
Homepage:            http://github.com/jwiegley/hnix

Extra-source-files: data/*.nix

Flag Parsec
  Description: Use parsec instead of Trifecta
  Default: False

Library
  Default-language: Haskell2010
  Exposed-modules:
    Nix
    Nix.Atoms
    Nix.Scope
    Nix.Stack
    Nix.Eval
    Nix.XML
    Nix.Thunk
    Nix.Lint
    Nix.Monad
    Nix.Monad.Instance
    Nix.Builtins
    Nix.Parser
    Nix.Expr
    Nix.Pretty
    Nix.Parser.Operators
    Nix.StringOperations
    Nix.TH
    Nix.Expr.Types
    Nix.Expr.Types.Annotated
  Other-modules:
    Nix.Parser.Library
    Nix.Expr.Shorthands
    Nix.Utils
  Build-depends:
      base                     >= 4.9          && < 5
    , aeson
    , ansi-wl-pprint
    , array >= 0.4 && < 0.6
    , base16-bytestring
    , containers
    , cryptohash
    , deriving-compat >= 0.3 && < 0.5
    , text
    , bytestring
    , monadlist
    , mtl
    , transformers
    , parsers >= 0.10
    , insert-ordered-containers >= 0.2.2
    , unordered-containers >= 0.2.9 && < 0.3
    , data-fix
    , deepseq
    , exceptions
    , insert-ordered-containers >= 0.2.2 && < 0.3
    , process
    , directory
    , filepath
    , scientific
    , semigroups >= 0.18 && < 0.19
    , split
    , template-haskell
    , regex-tdfa
    , regex-tdfa-text
    , these
    , unix
    , syb
    , vector
    , xml
  if flag(parsec)
    Cpp-options: -DUSE_PARSEC
    Build-depends: parsec
  else
    Build-depends: trifecta
  ghc-options: -Wall

Executable hnix
  Default-language: Haskell2010
  Main-is: Main.hs
  Hs-source-dirs: main
  Build-depends:
      base                     >= 4.3          && < 5
    , hnix
    , containers
    , ansi-wl-pprint
    , data-fix
    , deepseq
    , optparse-applicative
    , text
    , template-haskell
    , transformers
    , filepath
  Ghc-options: -Wall

Test-suite hnix-tests
  Type: exitcode-stdio-1.0
  Hs-source-dirs: tests
  Default-language: Haskell2010
  Main-is: Main.hs
  Other-modules:
    TestCommon
    ParserTests
    EvalTests
    PrettyTests
    NixLanguageTests
  Build-depends:
      base >= 4.3 && < 5
    , containers
    , text
    , data-fix
    , hnix
    , tasty
    , tasty-th
    , tasty-hunit
    , directory
    , Glob
    , filepath
    , process
    , split
    , transformers
    , interpolate
    , insert-ordered-containers
    , unix
    , unordered-containers

Benchmark hnix-benchmarks
  Type: exitcode-stdio-1.0
  Hs-source-dirs: benchmarks
  Default-language: Haskell2010
  Main-is: Main.hs
  Other-modules:
    ParserBench
  Build-depends:
      base >= 4.3 && < 5
    , containers
    , text
    , hnix
    , criterion

source-repository head
  type:     git
  location: git://github.com/jwiegley/hnix.git
